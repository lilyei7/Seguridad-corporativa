# Generated by Django 5.2.4 on 2025-07-22 20:36

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('tenants', '0002_tenant_correo_recepcion_tenant_metros_cuadrados_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ElectricityBill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bill_month', models.DateField(verbose_name='Mes del Recibo')),
                ('kwh_consumed', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='kWh Consumidos')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Monto Total')),
                ('previous_reading', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Lectura Anterior')),
                ('current_reading', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Lectura Actual')),
                ('due_date', models.DateField(verbose_name='Fecha de Vencimiento')),
                ('paid_date', models.DateField(blank=True, null=True, verbose_name='Fecha de Pago')),
                ('status', models.CharField(choices=[('pendiente', 'Pendiente'), ('pagado', 'Pagado'), ('vencido', 'Vencido'), ('en_revision', 'En Revisión')], default='pendiente', max_length=15, verbose_name='Estado')),
                ('bill_file', models.FileField(blank=True, null=True, upload_to='electricity_bills/', verbose_name='Archivo del Recibo')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notas')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Registro')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='electricity_bills', to='tenants.tenant', verbose_name='Inquilino')),
            ],
            options={
                'verbose_name': 'Recibo de Luz',
                'verbose_name_plural': 'Recibos de Luz',
                'ordering': ['-bill_month'],
            },
        ),
        migrations.CreateModel(
            name='MaintenanceExpense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('limpieza', 'Limpieza'), ('electricidad', 'Electricidad'), ('plomeria', 'Plomería'), ('aire_acondicionado', 'Aire Acondicionado'), ('pintura', 'Pintura'), ('carpinteria', 'Carpintería'), ('cerrajeria', 'Cerrajería'), ('jardineria', 'Jardinería'), ('seguridad', 'Seguridad'), ('otros', 'Otros')], max_length=20, verbose_name='Categoría')),
                ('description', models.TextField(verbose_name='Descripción del Gasto')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Monto')),
                ('service_date', models.DateField(verbose_name='Fecha del Servicio')),
                ('invoice_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Número de Factura')),
                ('provider', models.CharField(blank=True, max_length=200, null=True, verbose_name='Proveedor')),
                ('invoice_file', models.FileField(blank=True, null=True, upload_to='maintenance_invoices/', verbose_name='Archivo de Factura')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notas Adicionales')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Registro')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_expenses', to='tenants.tenant', verbose_name='Inquilino')),
            ],
            options={
                'verbose_name': 'Gasto de Mantenimiento',
                'verbose_name_plural': 'Gastos de Mantenimiento',
                'ordering': ['-service_date'],
            },
        ),
        migrations.CreateModel(
            name='TenantAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_type', models.CharField(choices=[('entrada', 'Entrada'), ('salida', 'Salida'), ('visita_entrada', 'Entrada de Visita'), ('visita_salida', 'Salida de Visita')], max_length=15, verbose_name='Tipo de Acceso')),
                ('access_time', models.DateTimeField(auto_now_add=True, verbose_name='Hora de Acceso')),
                ('location', models.CharField(default='Entrada Principal', max_length=100, verbose_name='Ubicación')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notas')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='access_logs', to='tenants.tenant', verbose_name='Inquilino')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Acceso de Inquilino',
                'verbose_name_plural': 'Accesos de Inquilinos',
                'ordering': ['-access_time'],
            },
        ),
        migrations.CreateModel(
            name='TenantAnnouncement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('content', models.TextField(verbose_name='Contenido')),
                ('is_general', models.BooleanField(default=False, verbose_name='Aviso General')),
                ('priority', models.CharField(choices=[('baja', 'Baja'), ('media', 'Media'), ('alta', 'Alta'), ('urgente', 'Urgente')], default='media', max_length=10, verbose_name='Prioridad')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Expiración')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='announcements', to='tenants.tenant', verbose_name='Inquilino')),
            ],
            options={
                'verbose_name': 'Aviso de Inquilino',
                'verbose_name_plural': 'Avisos de Inquilinos',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TenantIncident',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=200, verbose_name='Asunto')),
                ('category', models.CharField(choices=[('mantenimiento', 'Mantenimiento'), ('limpieza', 'Limpieza'), ('seguridad', 'Seguridad'), ('servicios', 'Servicios'), ('infraestructura', 'Infraestructura'), ('ruido', 'Ruido'), ('temperatura', 'Temperatura'), ('iluminacion', 'Iluminación'), ('acceso', 'Control de Acceso'), ('otros', 'Otros')], max_length=20, verbose_name='Categoría')),
                ('description', models.TextField(verbose_name='Descripción del Problema')),
                ('urgency_level', models.IntegerField(choices=[(1, 'Baja - No es urgente'), (2, 'Media - Puede esperar algunos días'), (3, 'Alta - Requiere atención pronto'), (4, 'Crítica - Requiere atención inmediata'), (5, 'Emergencia - Afecta seguridad o funcionamiento')], default=2, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Nivel de Urgencia')),
                ('evidence_file', models.FileField(blank=True, help_text='Fotos, videos o documentos que respalden la incidencia', null=True, upload_to='incident_evidence/', verbose_name='Archivo de Evidencia')),
                ('status', models.CharField(choices=[('reportada', 'Reportada'), ('en_revision', 'En Revisión'), ('asignada', 'Asignada'), ('en_proceso', 'En Proceso'), ('completada', 'Completada'), ('rechazada', 'Rechazada'), ('cerrada', 'Cerrada')], default='reportada', max_length=15, verbose_name='Estado')),
                ('location_details', models.CharField(blank=True, help_text='Ej: Oficina 205, Baño del 3er piso, Lobby principal', max_length=200, null=True, verbose_name='Detalles de Ubicación')),
                ('resolution_notes', models.TextField(blank=True, null=True, verbose_name='Notas de Resolución')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Reporte')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última Actualización')),
                ('resolved_at', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Resolución')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tenant_incidents', to=settings.AUTH_USER_MODEL, verbose_name='Asignado a')),
                ('reported_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reported_tenant_incidents', to=settings.AUTH_USER_MODEL, verbose_name='Reportado por')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incidents', to='tenants.tenant', verbose_name='Inquilino')),
            ],
            options={
                'verbose_name': 'Incidencia de Inquilino',
                'verbose_name_plural': 'Incidencias de Inquilinos',
                'ordering': ['-created_at'],
            },
        ),
    ]
